Description: Create EKS

Parameters:
  EnvironmentName:
    Description: The enviroment name
    Type: String
    Default: capstone

Resources:
  ClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref ClusterRole

  ClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: EKSCLUSTER
      Version: "1.26"
      RoleArn: !GetAtt ClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: capstone-SCG
        SubnetIds:
          - Fn::ImportValue: capstone-PUBSUBNET1
          - Fn::ImportValue: capstone-PUBSUBNET2

Outputs:
  EksId:
    Description: The EKS Id
    Value: !Ref EKSCluster
    Export:
      Name: !Sub ${EnvironmentName}-EKS

  EKSRoleArn:
    Description: EKS role arn
    Value: !GetAtt ClusterRole.Arn
    Export:
      Name: !Sub ${EnvironmentName}-EKSRoleArn
